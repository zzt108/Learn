@model SearchResults

@{
    var displayItems = (Model.SearchResultItems != null) 
        ? Model.SearchResultItems.Items : new Item[] { };    
}
<div id="contentblock">
 <p>@Model.SearchCriteriaText.Text @Html.Raw(Model.SearchString)</p>

 @{
     var resultsStart = (Model.SearchResultItems.PageIndex * Model.SearchResultItems.PageItemCount) + 1;
     var resultsEnd = (Model.SearchResultItems.PageIndex * Model.SearchResultItems.PageItemCount) + Model.SearchResultItems.Items.Length;   
     var totalResults = Model.SearchResultItems.ItemsTotal;         
 }
 <p>@Model.DisplayingResultsText.FormatText(resultsStart, resultsEnd, totalResults)</p>

@foreach (Item r in displayItems)
{
 <div class='search-results-hit'>
    <p>
        <img src='/~/icon/@Html.Sitecore().Field("__Icon", r.Template, null)' alt='[icon]' style="width:32px; height: 32px;" />
        @* new { w = "14", h = "14", alt = "[icon]" } *@
        
        <a href="@Html.Raw(r.GetLink())">@Html.Encode(r.DisplayName)</a><br />
        <em><strong>@Model.LastUpdatedText.Text</strong>
        @Html.Sitecore().Field("__updated", r)</em>
    </p>
 </div>
}

 <p>
 @Model.PageDescriptionText.FormatText(Model.SearchResultItems.PageIndex+1, Model.SearchResultItems.PageTotal)
 
 <p>
  @if (Model.SearchResultItems.PageIndex > 0) 
  {
      Output.WriteLine(Html.RouteLink(
          Model.PrevButtonText.Text.ToHtmlString(), 
          Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName,
            new
            {
                pathInfo = Model.Item.GetLink().TrimStart(new char[] { '/' }),
                SearchString = Model.SearchString,
                PageIndex = (Model.SearchResultItems.PageIndex - 1)
            },
            new { @style = "text-decoration:bold" }));
      Output.WriteLine(Html.Raw("&nbsp;"));
  }       

  @if (Model.SearchResultItems.PageIndex+1 < Model.SearchResultItems.PageTotal)
  {
      Output.WriteLine(Html.RouteLink(
         Model.NextButtonText.Text.ToHtmlString(),
         Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName,
           new
           {
               pathInfo = Model.Item.GetLink().TrimStart(new char[] { '/' }),
               SearchString = Model.SearchString,
               PageIndex = (Model.SearchResultItems.PageIndex + 1)
           },
           new { @style = "text-decoration:bold" }));
  }

 </p>
</div>

